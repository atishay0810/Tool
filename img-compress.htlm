<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online image compressor - Reduce image file size while maintaining quality. Compress JPG, PNG, and WebP images instantly.">
    <meta name="keywords" content="image compressor, compress images, reduce image size, optimize images, free image compression">
    <meta name="atishay" content="ImageCompressor Pro">
    <title>ImageCompressor Pro | Free Online Image Optimization Tool</title>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-app-pub-1860517447304538/3658164048" crossorigin="anonymous"></script>
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3f37c9;
            --accent: #4895ef;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4cc9f0;
            --warning: #f72585;
            --gray: #6c757d;
            --border-radius: 8px;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--dark);
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        header {
            text-align: center;
            padding: 30px 0;
            margin-bottom: 30px;
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: var(--primary);
            text-shadow: 1px 1px 3px rgba(0,0,0,0.1);
        }

        .subtitle {
            font-size: 1.2rem;
            color: var(--gray);
            max-width: 700px;
            margin: 0 auto;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr;
            gap: 30px;
        }

        @media (min-width: 992px) {
            .main-content {
                grid-template-columns: 3fr 1fr;
            }
        }

        .compression-section {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 30px;
            transition: var(--transition);
        }

        .compression-section:hover {
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        }

        .tool-container {
            display: flex;
            flex-direction: column;
            gap: 25px;
        }

        .upload-area {
            border: 2px dashed #ccc;
            border-radius: var(--border-radius);
            padding: 40px 20px;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            background: #f8f9fa;
        }

        .upload-area:hover {
            border-color: var(--primary);
            background: #eef2ff;
        }

        .upload-area.active {
            border-color: var(--success);
            background-color: rgba(76, 201, 240, 0.1);
        }

        .upload-icon {
            font-size: 3rem;
            color: var(--accent);
            margin-bottom: 15px;
        }

        .upload-text {
            margin-bottom: 15px;
            color: var(--gray);
        }

        .btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            display: inline-block;
            font-size: 1rem;
        }

        .btn:hover {
            background: var(--secondary);
            transform: translateY(-2px);
        }

        .btn:active {
            transform: translateY(0);
        }

        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;
        }

        .control-group {
            flex: 1;
            min-width: 250px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark);
        }

        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .slider {
            flex: 1;
            height: 8px;
            -webkit-appearance: none;
            appearance: none;
            background: #e0e0e0;
            border-radius: 4px;
            outline: none;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
            transition: var(--transition);
        }

        .slider::-webkit-slider-thumb:hover {
            background: var(--secondary);
            transform: scale(1.1);
        }

        .slider-value {
            min-width: 40px;
            text-align: center;
            font-weight: 600;
            color: var(--primary);
        }

        .preview-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: 20px;
            margin-top: 20px;
        }

        @media (min-width: 768px) {
            .preview-container {
                grid-template-columns: 1fr 1fr;
            }
        }

        .preview-box {
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            background: white;
        }

        .preview-header {
            padding: 15px;
            background: var(--light);
            border-bottom: 1px solid #eee;
            font-weight: 600;
            display: flex;
            justify-content: space-between;
        }

        .preview-content {
            padding: 20px;
            text-align: center;
        }

        .preview-img {
            max-width: 100%;
            max-height: 300px;
            border-radius: 4px;
            display: none;
        }

        .file-info {
            color: var(--gray);
            font-size: 0.9rem;
            margin-top: 10px;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .btn-outline {
            background: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
        }

        .btn-outline:hover {
            background: var(--primary);
            color: white;
        }

        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 25px;
        }

        .ad-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 20px;
            text-align: center;
            min-height: 250px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .ad-label {
            font-size: 0.8rem;
            color: var(--gray);
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 10px;
        }

        .ad-placeholder {
            width: 100%;
            height: 200px;
            background: #f0f3ff;
            border: 1px dashed var(--accent);
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--accent);
            font-weight: 600;
        }

        .features {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 25px;
        }

        .features h3 {
            margin-bottom: 15px;
            color: var(--primary);
            text-align: center;
        }

        .features ul {
            list-style: none;
            padding: 0;
        }

        .features li {
            padding: 10px 0;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .features li:last-child {
            border-bottom: none;
        }

        .feature-icon {
            color: var(--success);
            font-size: 1.2rem;
        }

        footer {
            text-align: center;
            padding: 30px 0;
            margin-top: 50px;
            color: var(--gray);
            font-size: 0.9rem;
            border-top: 1px solid #eee;
        }

        .stats {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-top: 15px;
            flex-wrap: wrap;
        }

        .stat-item {
            background: white;
            padding: 15px 25px;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            min-width: 150px;
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary);
        }

        .stat-label {
            font-size: 0.9rem;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }
            
            .subtitle {
                font-size: 1rem;
            }
            
            .controls {
                flex-direction: column;
                gap: 15px;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }

        /* Loading spinner */
        .spinner {
            display: none;
            width: 40px;
            height: 40px;
            margin: 20px auto;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top: 4px solid var(--primary);
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* SEO Content */
        .seo-content {
            margin-top: 40px;
            background: white;
            padding: 30px;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
        }

        .seo-content h2 {
            color: var(--primary);
            margin-bottom: 20px;
        }

        .seo-content p {
            margin-bottom: 15px;
            line-height: 1.7;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>ImageCompressor Pro</h1>
            <p class="subtitle">Optimize your images without sacrificing quality. Reduce file sizes for faster websites and better SEO performance.</p>
        </header>

        <div class="main-content">
            <div class="compression-section">
                <div class="tool-container">
                    <div id="uploadArea" class="upload-area">
                        <div class="upload-icon">📁</div>
                        <p class="upload-text">Drag & drop your image here or click to browse</p>
                        <button class="btn" id="browseBtn">Select Image</button>
                        <input type="file" id="fileInput" accept="image/*" style="display: none;">
                    </div>

                    <div class="controls">
                        <div class="control-group">
                            <label for="qualitySlider">Compression Level: <span id="qualityValue">80</span>%</label>
                            <div class="slider-container">
                                <input type="range" id="qualitySlider" class="slider" min="10" max="100" value="80">
                                <div class="slider-value" id="qualityDisplay">High</div>
                            </div>
                        </div>

                        <div class="control-group">
                            <label for="formatSelect">Output Format</label>
                            <select id="formatSelect" class="slider">
                                <option value="jpeg">JPEG</option>
                                <option value="png">PNG</option>
                                <option value="webp">WebP</option>
                            </select>
                        </div>
                    </div>

                    <div class="spinner" id="spinner"></div>

                    <div class="preview-container">
                        <div class="preview-box">
                            <div class="preview-header">
                                <span>Original Image</span>
                                <span id="originalSize">0 KB</span>
                            </div>
                            <div class="preview-content">
                                <img id="originalPreview" class="preview-img">
                                <div id="originalInfo" class="file-info">No image selected</div>
                            </div>
                        </div>

                        <div class="preview-box">
                            <div class="preview-header">
                                <span>Compressed Image</span>
                                <span id="compressedSize">0 KB</span>
                            </div>
                            <div class="preview-content">
                                <img id="compressedPreview" class="preview-img">
                                <div id="compressedInfo" class="file-info">Compressed image will appear here</div>
                            </div>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <button id="compressBtn" class="btn" disabled>Compress Image</button>
                        <button id="downloadBtn" class="btn btn-outline" disabled>Download Compressed</button>
                    </div>
                </div>
            </div>

            <div class="sidebar">
                <div class="ad-container">
                    <div class="ad-label">Advertisement</div>
                    <div class="ad-placeholder">
                        Google AdSense<br>Ad Unit 1
                    </div>
                </div>

                <div class="features">
                    <h3>Why Use Our Tool?</h3>
                    <ul>
                        <li><span class="feature-icon">✓</span> 100% Free & Secure</li>
                        <li><span class="feature-icon">✓</span> No Upload Limits</li>
                        <li><span class="feature-icon">✓</span> Preserve Image Quality</li>
                        <li><span class="feature-icon">✓</span> Fast Compression</li>
                        <li><span class="feature-icon">✓</span> Works on All Devices</li>
                        <li><span class="feature-icon">✓</span> Supports JPG, PNG, WebP</li>
                    </ul>
                </div>

                <div class="ad-container">
                    <div class="ad-label">Advertisement</div>
                    <div class="ad-placeholder">
                        Google AdSense<br>Ad Unit 2
                    </div>
                </div>
            </div>
        </div>

        <div class="seo-content">
            <h2>Optimize Your Images for Better Performance</h2>
            <p>Image compression is essential for website performance and SEO. Large images can significantly slow down your website, leading to higher bounce rates and lower search engine rankings. Our free online image compressor helps you reduce image file sizes without noticeable loss in quality.</p>
            <p>By using our tool, you can:</p>
            <ul>
                <li>Improve page loading times</li>
                <li>Reduce bandwidth consumption</li>
                <li>Enhance user experience on mobile devices</li>
                <li>Boost your website's SEO performance</li>
                <li>Save storage space on your server</li>
            </ul>
            <p>Our intelligent compression algorithm analyzes each image to find the optimal balance between file size reduction and visual quality. Whether you're a blogger, web developer, or photographer, our tool helps you optimize images for the web in seconds.</p>
        </div>

        <div class="stats">
            <div class="stat-item">
                <div class="stat-value">95%</div>
                <div class="stat-label">Average Size Reduction</div>
            </div>
            <div class="stat-item">
                <div class="stat-value">10M+</div>
                <div class="stat-label">Images Compressed</div>
            </div>
            <div class="stat-item">
                <div class="stat-value">100%</div>
                <div class="stat-label">Client-Side Processing</div>
            </div>
        </div>

        <footer>
            <p>© 2023 ImageCompressor Pro. All rights reserved. | Your images are processed securely in your browser and never uploaded to any server.</p>
            <p>For optimal results, use high-quality images and experiment with different compression levels.</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const fileInput = document.getElementById('fileInput');
            const uploadArea = document.getElementById('uploadArea');
            const browseBtn = document.getElementById('browseBtn');
            const qualitySlider = document.getElementById('qualitySlider');
            const qualityValue = document.getElementById('qualityValue');
            const qualityDisplay = document.getElementById('qualityDisplay');
            const compressBtn = document.getElementById('compressBtn');
            const downloadBtn = document.getElementById('downloadBtn');
            const originalPreview = document.getElementById('originalPreview');
            const compressedPreview = document.getElementById('compressedPreview');
            const originalSize = document.getElementById('originalSize');
            const compressedSize = document.getElementById('compressedSize');
            const originalInfo = document.getElementById('originalInfo');
            const compressedInfo = document.getElementById('compressedInfo');
            const formatSelect = document.getElementById('formatSelect');
            const spinner = document.getElementById('spinner');
            
            // Variables to store image data
            let originalImage = null;
            let compressedImageBlob = null;
            let originalFileSize = 0;
            
            // Event Listeners
            browseBtn.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', handleFileSelect);
            uploadArea.addEventListener('dragover', handleDragOver);
            uploadArea.addEventListener('dragleave', handleDragLeave);
            uploadArea.addEventListener('drop', handleDrop);
            qualitySlider.addEventListener('input', updateQualityDisplay);
            compressBtn.addEventListener('click', compressImage);
            downloadBtn.addEventListener('click', downloadCompressed);
            
            // Initialize
            updateQualityDisplay();
            
            // Functions
            function handleFileSelect(e) {
                const file = e.target.files[0];
                processImageFile(file);
            }
            
            function handleDragOver(e) {
                e.preventDefault();
                e.stopPropagation();
                uploadArea.classList.add('active');
            }
            
            function handleDragLeave(e) {
                e.preventDefault();
                e.stopPropagation();
                uploadArea.classList.remove('active');
            }
            
            function handleDrop(e) {
                e.preventDefault();
                e.stopPropagation();
                uploadArea.classList.remove('active');
                
                const file = e.dataTransfer.files[0];
                if (file && file.type.match('image.*')) {
                    processImageFile(file);
                } else {
                    alert('Please drop a valid image file.');
                }
            }
            
            function processImageFile(file) {
                if (!file.type.match('image.*')) {
                    alert('Please select a valid image file (JPG, PNG, etc.).');
                    return;
                }
                
                // Display original image
                const reader = new FileReader();
                reader.onload = function(e) {
                    originalImage = new Image();
                    originalImage.onload = function() {
                        originalPreview.src = e.target.result;
                        originalPreview.style.display = 'block';
                        
                        // Store and display file size
                        originalFileSize = file.size;
                        originalSize.textContent = formatFileSize(originalFileSize);
                        originalInfo.textContent = `${file.name} | ${originalImage.width}×${originalImage.height}px`;
                        
                        // Enable compress button
                        compressBtn.disabled = false;
                    };
                    originalImage.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
            
            function updateQualityDisplay() {
                const quality = parseInt(qualitySlider.value);
                qualityValue.textContent = quality;
                
                // Set quality display text
                if (quality >= 80) {
                    qualityDisplay.textContent = 'High Quality';
                } else if (quality >= 50) {
                    qualityDisplay.textContent = 'Medium Quality';
                } else {
                    qualityDisplay.textContent = 'Low Quality';
                }
            }
            
            function compressImage() {
                if (!originalImage) return;
                
                // Show loading spinner
                spinner.style.display = 'block';
                compressBtn.disabled = true;
                downloadBtn.disabled = true;
                
                // Use setTimeout to allow UI to update before compression
                setTimeout(() => {
                    const quality = parseInt(qualitySlider.value) / 100;
                    const format = formatSelect.value;
                    
                    // Create canvas
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');
                    
                    // Set canvas dimensions
                    canvas.width = originalImage.width;
                    canvas.height = originalImage.height;
                    
                    // Draw image on canvas
                    ctx.drawImage(originalImage, 0, 0);
                    
                    // Compress image
                    let mimeType;
                    switch(format) {
                        case 'png':
                            mimeType = 'image/png';
                            break;
                        case 'webp':
                            mimeType = 'image/webp';
                            break;
                        case 'jpeg':
                        default:
                            mimeType = 'image/jpeg';
                    }
                    
                    canvas.toBlob(function(blob) {
                        if (!blob) {
                            alert('Compression failed. Please try again.');
                            spinner.style.display = 'none';
                            compressBtn.disabled = false;
                            return;
                        }
                        
                        // Store compressed blob
                        compressedImageBlob = blob;
                        
                        // Display compressed image
                        const compressedUrl = URL.createObjectURL(blob);
                        compressedPreview.src = compressedUrl;
                        compressedPreview.style.display = 'block';
                        
                        // Display compressed file size
                        const compressedFileSize = blob.size;
                        compressedSize.textContent = formatFileSize(compressedFileSize);
                        
                        // Calculate savings
                        const savings = 100 - Math.round((compressedFileSize / originalFileSize) * 100);
                        compressedInfo.textContent = `${savings}% smaller | ${format.toUpperCase()} format`;
                        
                        // Enable download button
                        downloadBtn.disabled = false;
                        
                        // Hide spinner and re-enable compress button
                        spinner.style.display = 'none';
                        compressBtn.disabled = false;
                    }, mimeType, quality);
                }, 100);
            }
            
            function downloadCompressed() {
                if (!compressedImageBlob) return;
                
                // Create download link
                const a = document.createElement('a');
                a.href = URL.createObjectURL(compressedImageBlob);
                a.download = `compressed-image.${formatSelect.value}`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
            }
            
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
        });
    </script>
</body>
</html>
